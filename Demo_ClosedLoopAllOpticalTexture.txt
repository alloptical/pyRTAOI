---- Steps for running a closed-loop all-optical experiments during texture discrimination behavior ----
Zihui Zhang 2021
1.	Imaging-photostimulation calibration check
This step aims to burn spirals in an fluorescent slide to check co-alignment of imaging and photostimulation beams before running an experiment.
•	Start PrairieView, start Markpoint
•	Run Holobink (on the PC connected to SLM)
•	Run pyRTAOI (in Spyder), 
o	Click 'Connect Priarie'  and 'Connect Blink'.
o	Load configuration file: 20190722_calcheck.cfg
o	Click 'RunCalCheck' to burn spots.

2.	Cell detection
First, we need to take a short film to initiase CaImAn. 
•	Set t-series frames (#Reps) to 500 in PrairieView
•	Load configuration file (20190804_init_zoom2_16x.cfg).
•	Click ‘Take Ref Movie’ to grab a short film of FOV, then click ‘Initialise (auto save)’ when done.
Next, we take a long film to detect cells in FOV online. 
•	Load configuration file (20190804_tex_celldetection_zoom2_16x.cfg) then click 'update trials'
•	Click Run
You can initialse with the result file and repeat this step until enough cells are detected.

3.  Cell identification and activity analysis (during behaviour)
This step will record activity from the detected cells as an animal is involved in a behavior task. Here we use pyBehaviour (by Lloyd Russell) to setup a behavioral task session and record task performance.
•	Load configuration file (20200926_tex_cellidentification_zoom2_16x.config)
•	Load the ‘trialOrder’ file (saved out from pyBehaviour) and click ‘Plot trial type’ to check the number of trials.
•	Change t-series frames in PrairieView according to the ‘Frames needed’ suggested by pyRTAOI.
•	Click Run.
Result files (in both .pkl and .mat formats) will be saved once the session ends (in ‘pyrtaoi_results’ folder), which contain the spatial footprint and inferred activity traces as extracted by CaImAn and the parameters used. You can use them to analyse the neuronal functional identities and the population activity to decide when and which cells to stimulate in the next sessions. 
OnlineProcTexture.m is an example Matlab script to find trial-selective neurons in the barrel cortex of mice performing a texture discrimination task.

3.	Photo-excitabiliy test (optional)
This is an optional step to test which cells-of-interest are responsive to photpstimulation by stimulating them one-by-one in a random sequence with several repeats.
•	Load configuration file: 20190804_sequence_photo_zoom2_16x
•	Select the cells to test by clicking on FOV, or (recommended) load from a configuration file by clicking 'Load trigger target config'. (e.g. select the ‘OutputParam’ file generated by the Matlab script in the texture example).
•	Click 'Config Seq Stim'
•	Check 'Stim from blink'
•	Click 'Update Params' (make sure HoloBlink updates)
•	Change t-series frames accordingly in PrairieView and run mark points.
•	Click 'Run' in pyRTAOI.
You can use the results from this session to find which cells are photo-excitable. In our example, run OnlinePhotoexcitability.m, then load the result file in the photoexcitability test section in OnlineProcTexture to filter the target cells by there photostimulation response.

4.	Closed-loop all-optical experiment
You can load different experimental configurations or setup your own. Here is how to stimulate specific ensembles of neurons based on the population activity trajectory (i.e. the weighted sum of the activity of a group of neurons) during behavior. See OnlineProcTexture.m for an example of how to generate the experiment configuration files (file names that contain ‘_PyBehaviour_’, ‘_RTAOiPyBehaviour’ and ‘_OutputParams_’). Again, we use pyBehaviour to setup and record the behavioural task.
•	Setup behavioural session in pyBehaviour (load the _PyBehaviour_ file).
•	Load configuration file (2020926_tex_photo_zoom2_16x.cfg)
•	Click 'Load stimOrder (Matlab)' and select the _RTAOiPyBehaviour_ file.
•	Click 'Load trigger target config' and select the _OutputParams_ file 
•	Check 'Stim from blink'
•	Click 'Update Params' (make sure HoloBlink updates)
•	Change t-series frames accordingly in PrairieView and run mark points.
•	Click Run
Note: you can abort the session at anytime by aborting the acquisition in PrairieView. pyRTAOI will stop the processing threads and save out result files automatically when no more frames are available in buffer. 
